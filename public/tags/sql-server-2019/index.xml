<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql Server 2019 on Taryn Pratt</title>
    <link>https://tarynpivots.com/tags/sql-server-2019/</link>
    <description>Recent content in Sql Server 2019 on Taryn Pratt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jul 2020 04:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tarynpivots.com/tags/sql-server-2019/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL Server 2019 Tuple Mover Behavior Change</title>
      <link>https://tarynpivots.com/post/sql-server-2019-tuple-mover-behavior-change/</link>
      <pubDate>Mon, 20 Jul 2020 04:00:00 +0000</pubDate>
      
      <guid>https://tarynpivots.com/post/sql-server-2019-tuple-mover-behavior-change/</guid>
      <description>This is a follow-up to my post about an issue with clustered columnstore, when upgrading from SQL Server 2017 to SQL Server 2019. After extensive testing and working with support, I wanted to share some information about a change in SQL Server 2019 that might impact others.
Overview I suggest reading my other post first, it&amp;rsquo;ll only take a few minutes. I&amp;rsquo;ll wait&amp;hellip;
However, if you really don&amp;rsquo;t want to read it, here&amp;rsquo;s a quick recap on the initial issue.</description>
    </item>
    
    <item>
      <title>SQL Server 2019 Aggressive Clustered Columnstore Cleanup</title>
      <link>https://tarynpivots.com/post/aggressive-clustered-columnstore-cleanup/</link>
      <pubDate>Fri, 24 Apr 2020 04:00:00 +0000</pubDate>
      
      <guid>https://tarynpivots.com/post/aggressive-clustered-columnstore-cleanup/</guid>
      <description>In late March 2020, we upgraded our production SQL Servers to SQL Server 2019 with CU3. After finishing the upgrade, we hit an issue with clustered columnstore that we hadn&amp;rsquo;t experienced in the previous version of SQL, SQL Server 2017. The issue also wasn&amp;rsquo;t something we encountered during our extensive testing on various servers in development, which dated back to September 2019. The problem has been mitigated, but I wanted to share our experience.</description>
    </item>
    
    <item>
      <title>A gotcha when upgrading to SQL Server 2019</title>
      <link>https://tarynpivots.com/post/system-view-gotcha-with-sql-server-2019/</link>
      <pubDate>Fri, 21 Feb 2020 06:00:38 +0000</pubDate>
      
      <guid>https://tarynpivots.com/post/system-view-gotcha-with-sql-server-2019/</guid>
      <description>In my last post, I mentioned that I started the process of upgrading Stack Overflow to SQL Server 2019. This week I tackled our first production servers and after upgrading, we hit a small issue aka a gotcha because we were using an old system view. Below is a recap of what I encountered.
A Little Background The servers I upgraded were the three SQL Servers that run Stack Overflow for Teams.</description>
    </item>
    
  </channel>
</rss>