<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Readable Secondary on Taryn Pratt - Pivots and other SQL fun</title>
    <link>https://tarynpivots.com/tags/readable-secondary/</link>
    <description>Recent content in Readable Secondary on Taryn Pratt - Pivots and other SQL fun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 Dec 2020 04:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tarynpivots.com/tags/readable-secondary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Syncing Logins Between Availability Group Replicas</title>
      <link>https://tarynpivots.com/post/2020/syncing-logins-between-availablity-group-replicas/</link>
      <pubDate>Fri, 18 Dec 2020 04:00:00 +0000</pubDate>
      
      <guid>https://tarynpivots.com/post/2020/syncing-logins-between-availablity-group-replicas/</guid>
      <description>I mentioned this in a few previous posts, but for for those who may have missed it or forgotten, here’s a quick refresher - we use Always On Availability Groups at Stack Overflow on all of our main production servers running the network of public Q&amp;amp;A sites, Jobs, and Stack Overflow for Teams. It&amp;rsquo;s a great way to implement disaster recovery for a SQL Server environment.
Always On Availability Groups can support up to nine availability replicas, and while we don’t use anywhere near that many replicas in each of our clusters, we do have 2 replicas per cluster (3 servers total), with the replicas being used as a readable secondary.</description>
    </item>
    
    <item>
      <title>The Perils of Querying SQL Server Replicas Under Load</title>
      <link>https://tarynpivots.com/post/perils-querying-sql-replica-under-load/</link>
      <pubDate>Wed, 15 Jan 2020 06:00:38 +0000</pubDate>
      
      <guid>https://tarynpivots.com/post/perils-querying-sql-replica-under-load/</guid>
      <description>Last week at Stack Overflow we had an internal hack-a-thon, or as we call it, a make-a-thon. I was on the bug-bashing team, which is the team that attempts to fix smallish bugs we haven’t gotten around to fixing, due to other time-constraints. I was tagged to investigate a bug about duplicate badges being awarded because it looked to possibly be an easy fix in SQL. At first glance it looked simple enough, but once I started digging in, I figured out very quickly it wouldn’t be.</description>
    </item>
    
  </channel>
</rss>